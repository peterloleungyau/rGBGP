% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GBGP.R
\name{grammar}
\alias{grammar}
\title{To define the grammar.}
\usage{
grammar(rules, start)
}
\arguments{
\item{rules}{A named list of the rules of the non-terminals. The
names are the names of the non-terminals (which should avoid
using character ':' which will be used as separator in rule
names), and the value is either a rule as constructed by
\code{rule()} or a unnamed list of rules, each constructed by
\code{rule()}.}

\item{start}{A character of as non-terminal as starting symbol.}
}
\value{
a list of class "grammar", which contains:

start: the name of the starting symbol

rules: named list of processed rules, each named by the
non-terminal, and each rule will get a name.

rules_by_name: named list of each rule mapped by the rule name.

nt_min_heights: named list of minimum heights of non-terminals,
using the non-terminal name as name.

rules_min_heights: named list of minimum heights of the rules,
using the rule id as name.
}
\description{
To define the grammar.
}
\examples{
\dontrun{
library(rGBGP)

test_sixmultiplexor_rules <- list(
  B = list(
    # Note that we can optionally manually give a unique name to a
    # rule, otherwise a name will be generated.
    rule("&", "B", "B", name = "r_and"),
    rule("|", "B", "B", name = "r_or"),
    rule("!", "B", name = "r_not"),
    rule("ifelse", "B", "B", "B", name = "r_if"),
    # Rules have default actions for constructing the phenotype, but
    # the action can also be explicitly specified.
    rule("T", action = first)
  ),
  T = list(
    rule("a0", action = first_as_symbol),
    rule("a1", action = first_as_symbol),
    rule("d0", action = first_as_symbol),
    rule("d1", action = first_as_symbol),
    rule("d2", action = first_as_symbol),
    rule("d3", action = first_as_symbol)
  )
)

test_sixmultiplexor_G <- grammar(rules = test_sixmultiplexor_rules,
                                 start = "B")

}
}
